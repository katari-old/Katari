<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!-- vim: set ts=2 et sw=2 ai: -->

  <parent>
    <groupId>com.globant.katari</groupId>
    <artifactId>dev</artifactId>
    <version>0.48-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.globant.katari</groupId>
  <artifactId>katari-search</artifactId>
  <packaging>jar</packaging>
  <name>Katari - search</name>
  <description>
    Katari search module.
  </description>

  <dependencies>

    <!-- Test only dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
    </dependency>

    <!-- Katari dependencies -->
    <dependency>
      <groupId>com.globant.katari</groupId>
      <artifactId>katari-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.globant.katari</groupId>
      <artifactId>katari-hibernate</artifactId>
    </dependency>

    <dependency>
      <groupId>com.globant.katari</groupId>
      <artifactId>katari-quartz</artifactId>
    </dependency>

    <dependency>
      <groupId>com.globant.katari</groupId>
      <artifactId>katari-tools</artifactId>
    </dependency>

    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>

    <!-- Commons dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.compass-project</groupId>
      <artifactId>compass</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>

  </dependencies>

  <build>

    <!-- Filters the log4j property resource file. -->
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>log4j.properties</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>log4j.properties</exclude>
        </excludes>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*Test.java </include>
          </includes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <!-- extensions>true</extensions -->
        <executions>
          <execution>
            <id>uxf2png</id>
            <phase>pre-site</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                <![CDATA[
                srcdir = project.basedir.canonicalPath + "/src/site/uxf"
                targetdir = project.build.directory + "/site/images/"
                new File(targetdir).mkdirs()
                dir = new File(srcdir)
                log.info("Converting uml diagrams ...")

                new java.io.File(srcdir).eachFileRecurse({
                  file ->
                    if(file.name.matches("^.*\\.uxf\$")) {
                      target = targetdir + file.name.replace('.uxf','.png')
                      handler = new com.umlet.control.diagram.DiagramHandler(file);
                      handler.getFileHandler().doExportAs("png", target);
                    }})
                ]]>
              </source>
            </configuration>
          </execution>
        </executions>
        <inherited>false</inherited>
      </plugin>
    </plugins>
  </build>

</project>

