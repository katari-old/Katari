<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:katari="http://www.globant.com/schema/katari"
      xmlns:util="http://www.springframework.org/schema/util"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
      http://www.globant.com/schema/katari
      http://www.globant.com/schema/katari/katari.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util-2.0.xsd">

  <import resource="classpath:/com/globant/katari/core/beans-core.xml"/>
  <import resource="classpath:/com/globant/katari/hibernate/beans-hibernate.xml"/>

  <!-- The core user module. -->
  <katari:import module="com.globant.katari.hibernate.coreuser"/>

  <!-- Implementation of BeanPostProcessor to initialize modules. It looks for
  bean that implements the Module interfase. -->
  <bean class="com.globant.katari.core.web.ModuleBeanPostProcessor">
    <constructor-arg>
      <ref bean='contextRegistrar'/>
    </constructor-arg>
  </bean>

  <!-- ModuleContextRegistrar manages the module contexts. -->
  <bean id="contextRegistrar"
    class="com.globant.katari.core.web.ModuleContextRegistrar">

    <constructor-arg ref='moduleListenerProxy'/>
    <constructor-arg ref='moduleFilterProxy'/>
    <constructor-arg ref='moduleContainer'/>
    <constructor-arg>
      <bean class="com.globant.katari.core.spring.KatariMessageSource">
        <constructor-arg index='0' value='en'/>
      </bean>
    </constructor-arg>

    <!-- The initial menu bar. It defines the order of the menu elements. -->
    <constructor-arg>
      <katari:menuBar>
        <katari:menuNode position='10000' name='Administration'/>
      </katari:menuBar>
    </constructor-arg>

    <constructor-arg ref='loginConfigurer' />
  </bean>

  <bean id="loginConfigurer"
      class="com.globant.katari.core.login.LoginConfigurationSetter">
    <constructor-arg index="0" ref="delegatingFilterEntryPoint" />
    <constructor-arg index="1" ref="delegatingLogoutFilter" />
    <constructor-arg index="2" ref="delegatingProcessingFilter" />
  </bean>

  <bean id="delegatingFilterEntryPoint"
      class="com.globant.katari.core.login.DelegatingEntryPoint">
  </bean>

  <bean id="delegatingLogoutFilter"
    class="com.globant.katari.core.login.ConfigurableFilterProxy">
  </bean>

  <bean id="delegatingProcessingFilter"
    class="com.globant.katari.core.login.ConfigurableFilterProxy">
  </bean>
  <!-- End of security information. -->

  <!-- A sample datasource. Do not use this for production. -->
  <bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value='org.hsqldb.jdbcDriver'/>
    <property name="url" value="jdbc:hsqldb:mem:testdb;hsqldb.tx=mvcc"/>
    <property name="username" value="sa"/>
    <property name="password" value=""/>
  </bean>

  <alias name="dataSource" alias="katari.dataSource"/>

  <bean id="katari.hibernateProperties"
    class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="properties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
        <prop key="hibernate.hbm2ddl.auto">create</prop>
      </props>
    </property>
  </bean>

  <util:list id='katari.persistentClasses'/>

  <!-- Transaction manager for a single Hibernate SessionFactory
  (alternative to JTA) -->
  <bean id="transactionManager"
    class="org.springframework.orm.hibernate4.HibernateTransactionManager"
    lazy-init="true">
    <property name="sessionFactory">
      <ref bean="katari.sessionFactory" />
    </property>
  </bean>

  <bean id='moduleListenerProxy'
    class='com.globant.katari.core.web.ModuleListenerProxy'/>

  <!-- Mantains a list of web filters, and give each filter in the list a
  chance to filter the request. -->
  <bean id='moduleFilterProxy'
    class='com.globant.katari.core.web.ModuleFilterProxy'>

    <constructor-arg>
      <bean class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
          <list>
            <bean class="com.globant.katari.core.web.FilterMapping">
              <constructor-arg><value>.*</value></constructor-arg>
              <constructor-arg>
                <bean class="com.globant.katari.core.web.FilterAndParameters">
                  <constructor-arg>
                    <bean class="com.globant.katari.core.web.WebletSupportFilter"/>
                  </constructor-arg>
                </bean>
              </constructor-arg>
            </bean>
          </list>
        </property>
      </bean>
    </constructor-arg>

  </bean>

  <!-- Maps a module name to a servlet config bean. -->
  <bean id='moduleContainer'
    class='com.globant.katari.core.web.ModuleContainerServlet'/>

  <!-- Adds a sample user entity to hibernate. -->
  <bean class='com.globant.katari.core.web.ListFactoryAppender'>
    <constructor-arg value='katari.persistentClasses'/>
    <constructor-arg>
      <list>
        <value>com.globant.katari.hibernate.coreuser.domain.SampleUser</value>
        <value>com.globant.katari.hibernate.EntityWithParameterInConstructor</value>
        <value>com.globant.katari.hibernate.EntityWithDefaultConstructor</value>
      </list>
    </constructor-arg>
  </bean>

  <bean class='com.globant.katari.core.web.MapFactoryAppender'>
    <constructor-arg index='0' value='infrastructure.entityFactoryBeanNames' />
    <constructor-arg index='1'>
      <util:map>
        <entry
          key='com.globant.katari.hibernate.EntityWithParameterInConstructor'
          value='entityWithParameterInConstructorFactory' />
          <entry
          key='com.globant.katari.hibernate.OneEmbedded'
          value='oneEmbeddedFactory' />
      </util:map>
    </constructor-arg>
  </bean>

  <bean id='entityWithParameterInConstructorFactory'
    class='com.globant.katari.hibernate.EntityWithParameterInConstructorFactory'>
    <constructor-arg index='0' ref='entityWithParameterInConstructorRepository'/>
  </bean>

  <bean id='oneEmbeddedFactory'
    class='com.globant.katari.hibernate.OneEmbeddedFactory' />

  <bean id='entityWithParameterInConstructorRepository'
    class='com.globant.katari.hibernate.EntityWithParameterInConstructorRepository'>
    <property name='sessionFactory' ref='katari.sessionFactory'/>
  </bean>

</beans>

<!-- vim: set ts=2 et sw=2 ai: -->

